/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/audio": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Your GET endpoint */
        get: operations["get-audio"];
        put?: never;
        /** Your POST endpoint */
        post: operations["post-audio"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/audio/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Your POST endpoint */
        post: operations["post-audio-test"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/audio/new": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Your POST endpoint */
        post: operations["post-audio-new"];
        /** Your DELETE endpoint */
        delete: operations["delete-audio-new"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** PostAudioForRequest */
        PostAudioForRequest: {
            title: string;
            script: components["schemas"]["ScriptData"][];
            description: string;
            user_id: string;
            reference: string[];
            tts: string;
            voices: string[];
            speakers: string[];
        };
        /** ScriptData */
        ScriptData: {
            speaker: string;
            text: string;
            caption?: string;
        };
        /** AudioData */
        AudioData: {
            id: string;
            url: string;
            title: string;
            description: string;
            reference: string[];
            tts: string;
            voices: string[];
            speakers: string[];
            script: components["schemas"]["ScriptData"][];
            created_by: string;
            created_at: string;
        };
        /** AudioTestRequest */
        AudioTestRequest: {
            script?: components["schemas"]["ScriptData"][];
            tts?: string;
            voices?: string[];
            speakers?: string[];
            script_id?: string;
        };
        /** AudioTestResponse */
        AudioTestResponse: {
            m3u8_url?: string;
            mp3_urls?: string[];
            script_id?: string;
        };
        /** PostNewAudioRequest */
        PostNewAudioRequest: {
            title: string;
            description?: string;
            script: components["schemas"]["ScriptData"][];
            user_id: string;
            reference?: string[];
            tts: string;
            voices: string[];
            speakers: string[];
            script_id: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "get-audio": {
        parameters: {
            query?: {
                type?: string;
                user_id?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AudioData"][];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "post-audio": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PostAudioForRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AudioData"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "post-audio-test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["AudioTestRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    "header-0"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AudioTestResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "post-audio-new": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PostNewAudioRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    "header-0"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AudioData"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "delete-audio-new": {
        parameters: {
            query?: {
                script_id?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
